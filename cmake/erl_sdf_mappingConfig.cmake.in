@PACKAGE_INIT@

# resolve dependencies
foreach(package erl_common erl_covariance erl_gaussian_process erl_geometry)
    if (NOT TARGET ${package}::${package})
        message(STATUS "Looking for ${package}")
        find_package(${package} REQUIRED)
    endif()
endforeach()

include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")

# name alias
add_library(@PROJECT_NAME@::pybind ALIAS @PROJECT_NAME@::@PROJECT_NAME@_pybind)

check_required_components("@PROJECT_NAME@")

# export variables
set(@PROJECT_NAME@_FOUND
        TRUE
        CACHE INTERNAL "TRUE if @PROJECT_NAME@ and all required components found on the system" FORCE)
set(@PROJECT_NAME@_PY_MODULE_DIRS
        @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATAROOTDIR@/@PROJECT_NAME@/python/gp_sdf
        CACHE INTERNAL "@PROJECT_NAME@: Python module directories" FORCE)

message(STATUS "@PROJECT_NAME@ is found")
